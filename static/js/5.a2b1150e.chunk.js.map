{"version":3,"sources":["redux/hero/hero.operations.js","pages/heroPage/HeroPage.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","getHero","dispatch","getState","a","deleteHeroRequest","authToken","auth","get","data","getHeroSuccess","getHeroError","message","getHeroById","getHeroIdRequest","getHeroIdSuccess","getHeroIdError","deleteHero","id","getHeroRequest","delete","then","deleteHeroSuccess","catch","error","deleteHeroError","HeroPage","useDispatch","history","useHistory","useEffect","useParams","selectedHeroObjById","useSelector","state","hero","items","find","_id","nickname","name","descr","superpower","phrase","image","className","onClick","goBack","style","position","top","zIndex","push","src","marginTop"],"mappings":"0RAmBAA,IAAMC,SAASC,QAAU,gCAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAQtDI,EAAU,yDAAM,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,6DACpBF,EAASG,eACHC,EAAYH,IAAWI,KAAKV,MAClCA,EAAUS,GAHU,kBAKKZ,IAAMc,IAAI,SALf,gBAKVC,EALU,EAKVA,KAERP,EAASQ,YAAeD,IAPN,kDASlBP,EAASS,YAAa,KAAMC,UATV,0DAAN,yDAcVC,EAAc,yDAAM,WAAMX,GAAN,iBAAAE,EAAA,6DACxBF,EAASY,eADe,kBAICpB,IAAMc,IAAI,aAJX,gBAIdC,EAJc,EAIdA,KAERP,EAASa,YAAiBN,IANJ,gDAQtBP,EAASc,YAAe,KAAMJ,UARR,yDAAN,uDA2BdK,EAAa,SAAAC,GAAE,8CAAI,WAAMhB,GAAN,SAAAE,EAAA,6DACvBF,EAASiB,eADc,SAGjBzB,IACH0B,OADG,gBACaF,IAChBG,MAAK,kBAAMnB,EAASoB,YAAkBJ,OACtCK,OAAM,SAAAC,GAAK,OAAItB,EAASuB,YAAgBD,EAAMZ,aAN1B,2CAAJ,wD,uDCxErB,0DA6Dec,UArDE,WACf,IAAMxB,EAAWyB,cACXC,EAAUC,cAChBC,qBAAU,WACR5B,EAASD,iBACR,CAACC,IACJ,IAAQgB,EAAOa,cAAPb,GAKFc,EAHYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,SACbC,MAAK,SAAAF,GAAI,OAAIA,EAAKG,MAAQpB,KAIvDqB,EACNP,EADMO,SAAUC,EAChBR,EADgBQ,KAAMC,EACtBT,EADsBS,MAAOC,EAC7BV,EAD6BU,WAAYC,EACzCX,EADyCW,OAAQC,EACjDZ,EADiDY,MAAON,EACxDN,EADwDM,IAO1D,OACE,sBAAKO,UAAU,yBAAf,UACE,wBACEC,QAPS,WACblB,EAAQmB,UAOJF,UAAU,uBACVG,MAAO,CAAEC,SAAU,WAAYC,IAAK,GAAIC,OAAQ,GAHlD,0BAQA,qBAAKN,UAAU,qBAAqBC,QAAS,kBAAMlB,EAAQwB,KAAK,UAAhE,SACE,qBAAKC,IAAKT,EAAOC,UAAU,wBAG7B,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,8BAA8BQ,IAAKT,IAClD,sBAAKC,UAAU,gCAAf,UACE,6BAAKN,IACL,4BAAIC,IACJ,4BACE,4BAAIC,MAEN,4BACE,8BAAIC,EAAJ,SAEF,4BAAIC,IACJ,mBAAGK,MAAO,CAAEM,UAAW,kBAzBgBhB","file":"static/js/5.a2b1150e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  getHeroRequest,\r\n  getHeroSuccess,\r\n  getHeroError,\r\n  getHeroIdRequest,\r\n  getHeroIdSuccess,\r\n  getHeroIdError,\r\n  addHeroRequest,\r\n  addHeroSuccess,\r\n  addHeroError,\r\n  deleteHeroRequest,\r\n  deleteHeroSuccess,\r\n  deleteHeroError,\r\n  updateHeroRequest,\r\n  updateHeroSuccess,\r\n  updateHeroError\r\n} from './hero.actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000/api/v1/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  }\r\n};\r\n\r\n// GET @ /hero\r\nconst getHero = () => async (dispatch, getState) => {\r\n  dispatch(deleteHeroRequest());\r\n  const authToken = getState().auth.token;\r\n  token.set(authToken);\r\n  try {\r\n    const { data } = await axios.get('/hero');\r\n\r\n    dispatch(getHeroSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getHeroError(error.message));\r\n  }\r\n};\r\n\r\n// GET @ /hero/:id\r\nconst getHeroById = () => async dispatch => {\r\n  dispatch(getHeroIdRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/hero/:id');\r\n\r\n    dispatch(getHeroIdSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getHeroIdError(error.message));\r\n  }\r\n};\r\n\r\n//POST @ /hero\r\nconst addHero = info => async dispatch => {\r\n  dispatch(addHeroRequest());\r\n  const hero = {\r\n    info\r\n  };\r\n\r\n  dispatch(addHeroRequest());\r\n  await axios\r\n    .post('/hero', hero)\r\n    .then(({ data }) => dispatch(addHeroSuccess(data)))\r\n    .catch(error => dispatch(addHeroError(error.message)));\r\n};\r\n\r\n// DELETE @ /hero/:id\r\nconst deleteHero = id => async dispatch => {\r\n  dispatch(getHeroRequest());\r\n\r\n  await axios\r\n    .delete(`/hero/${id}`)\r\n    .then(() => dispatch(deleteHeroSuccess(id)))\r\n    .catch(error => dispatch(deleteHeroError(error.message)));\r\n};\r\n\r\n// PUT @ /hero/:id\r\nconst updateHero = values => async (dispatch, getState) => {\r\n  console.log(values);\r\n  dispatch(updateHeroRequest());\r\n  try {\r\n    const id = getHeroById(getState());\r\n    const res = await axios.put(`/hero/${id}`, values);\r\n    dispatch(updateHeroSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(updateHeroError(error.message));\r\n  }\r\n};\r\n\r\nexport { getHero, getHeroById, addHero, deleteHero, updateHero };\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getHero } from '../../redux/hero/hero.operations';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport './HeroPage.scss';\r\n\r\nconst HeroPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(getHero());\r\n  }, [dispatch]);\r\n  const { id } = useParams();\r\n\r\n  const allHeroes = useSelector(state => state.hero.items);\r\n  const getHeroById = _id => allHeroes.find(hero => hero._id === id);\r\n\r\n  const selectedHeroObjById = getHeroById();\r\n\r\n  const { nickname, name, descr, superpower, phrase, image, _id } =\r\n    selectedHeroObjById;\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className='selectedHero_container' key={_id}>\r\n      <button\r\n        onClick={goBack}\r\n        className='current-hero__button'\r\n        style={{ position: 'absolute', top: 10, zIndex: 2 }}\r\n      >\r\n        Back to home\r\n      </button>\r\n\r\n      <div className='current-hero__back' onClick={() => history.push('/home')}>\r\n        <img src={image} className='current-hero__img' />\r\n      </div>\r\n\r\n      <div className='current-hero__container'>\r\n        <img className='current-hero__container-img' src={image} />\r\n        <div className='current-hero__container-about'>\r\n          <h1>{nickname}</h1>\r\n          <p>{name}</p>\r\n          <p>\r\n            <b>{descr}</b>\r\n          </p>\r\n          <p>\r\n            <b>{superpower} </b>\r\n          </p>\r\n          <p>{phrase}</p>\r\n          <p style={{ marginTop: '20px' }}></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroPage;\r\n"],"sourceRoot":""}